---
import type { HTMLTag, Polymorphic } from 'astro/types'

import { cn } from 'node_modules/astro-pure/utils'
import type { StringifiedUtil } from 'unocss'

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
  heading?: string
  subheading?: string
  date?: string
  class?: string
  imgSrc?: string // Directory of the image
  imgAlt?: string // Description of the image
}

const { as: Tag = 'div', class: className, href, heading, subheading, date, imgSrc, imgAlt = '' } = Astro.props
---

<Tag
  class={cn(
    'not-prose block relative rounded-2xl border bg-muted px-5 py-3',
    href && 'transition-all hover:border-foreground/25 hover:shadow-sm',
    imgSrc && 'relative overflow-hidden',
    className
  )}
  href={href}
>
  <div class='relative z-10 flex flex-col gap-y-1.5'>
    <div class='flex flex-col gap-y-0.5'>
      <h2 class='text-lg font-medium'>{heading}</h2>
      <p class='text-muted-foreground'>{subheading}</p>
      <p class='text-muted-foreground'>{date}</p>
    </div>
    <slot />
  </div>
  {/*--- Now start to process the images */}
  {
    imgSrc && (
      <img
        src={imgSrc}
        alt={imgAlt}
        class="absolute end-0 top-0 z-0 h-full w-1/2 object-cover opacity-30"
        />
      )
  }
</Tag>
